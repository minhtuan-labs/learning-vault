import streamlit as st
import pandas as pd
from services import pam_backend_api as api
from datetime import datetime
from utils import auth

# --- C·∫•u h√¨nh trang ---
st.set_page_config(
	page_title="My PAM | Stock Trade",
	page_icon="üìà",
	layout="centered"
)

# Kh·ªüi t·∫°o session, kh√¥i ph·ª•c t·ª´ cookie n·∫øu c√≥
auth.initialize_session()

st.title("üìà Record a Stock Trade")

# --- Ki·ªÉm tra x√°c th·ª±c ---
if not auth.is_authenticated():
	st.warning("Please login to access this page.")
	st.stop()

# --- Form nh·∫≠p li·ªáu ---
with st.form("new_stock_trade_form", clear_on_submit=True):
	st.header("New Trade Details")

	col1, col2 = st.columns(2)
	with col1:
		ticker = st.text_input("Ticker Symbol", placeholder="E.g., HPG, FPT").upper()
		trade_type = st.selectbox("Trade Type", ("BUY", "SELL"))

	with col2:
		quantity = st.number_input("Quantity", min_value=0.01, step=0.01)
		price = st.number_input("Price per Share", min_value=0.0, step=100.0)
		fee = st.number_input("Fee", min_value=0.0, step=1000.0)

	trade_date = st.date_input("Trade Date")
	trade_time = st.time_input("Trade Time")
	notes = st.text_area("Notes (Optional)")

	submitted = st.form_submit_button("Record Trade")

	if submitted:
		if not all([ticker, trade_type, quantity, price]):
			st.warning("Please fill in all required fields.")
		else:
			# K·∫øt h·ª£p ng√†y v√† gi·ªù
			trade_datetime = datetime.combine(trade_date, trade_time)

			# Chu·∫©n b·ªã d·ªØ li·ªáu cho API
			trade_data = {
				"trade_type": trade_type.lower(),
				"trade_date": trade_datetime.isoformat(),
				"quantity": quantity,
				"price": price,
				"fee": fee,
				"notes": notes
			}

			# Tham s·ªë truy v·∫•n b√¢y gi·ªù ch·ªâ c·∫ßn ticker
			params = {"ticker": ticker}

			with st.spinner("Recording trade..."):
				# G·ªçi ƒë·∫øn API nghi·ªáp v·ª•, backend s·∫Ω t·ª± lo ph·∫ßn c√≤n l·∫°i
				result = api.post_data("/api/v1/trades/stock", data=trade_data, params=params)
				if result:
					st.success(f"Successfully recorded '{trade_type}' trade for {ticker}!")

