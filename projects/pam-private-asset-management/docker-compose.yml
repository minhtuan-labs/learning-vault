services:
  # Service cho Database PostgreSQL
  pam-db-service:
    image: postgres:15-alpine
    container_name: pam-db-service-container
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Service cho Backend FastAPI
  pam-backend-service:
    container_name: pam-backend-service-container
    build: ./pam-backend
    image: pam-backend:latest
    volumes:
      - ./pam-backend:/app
    ports:
      - "6138:8000"
    env_file:
      - .env
    depends_on:
      pam-db-service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import socket; s = socket.socket(); s.connect(('localhost', 8000))\""]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Service cho Frontend Streamlit
  pam-frontend-service:
    container_name: pam-frontend-service-container
    build: ./pam-frontend
    image: pam-frontend:latest
    volumes:
      - ./pam-frontend:/app
    ports:
      - "6868:8001"
    env_file:
      - .env
    depends_on:
      pam-backend-service:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
